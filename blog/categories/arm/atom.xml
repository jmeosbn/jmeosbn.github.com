<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: arm | git-log(1)]]></title>
  <link href="http://jmeosbn.github.com/blog/categories/arm/atom.xml" rel="self"/>
  <link href="http://jmeosbn.github.com/"/>
  <updated>2012-11-15T21:33:21+00:00</updated>
  <id>http://jmeosbn.github.com/</id>
  <author>
    <name><![CDATA[Jamie Osborne]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing the Stellaris toolchain]]></title>
    <link href="http://jmeosbn.github.com/blog/2012/11/15/testing-the-stellaris-toolchain/"/>
    <updated>2012-11-15T20:40:00+00:00</updated>
    <id>http://jmeosbn.github.com/blog/2012/11/15/testing-the-stellaris-toolchain</id>
    <content type="html"><![CDATA[<p>With the <a href="https://github.com/jsnyder/arm-eabi-toolchain">toolchain</a> installed, here's the basic steps to compile an example and get the code onto the launchpad.  A mirror for the Stellaris example code and other pieces is available on <a href="https://github.com/yuvadm/stellaris">github</a>.</p>

<!-- more -->


<pre><code># Add the toolchain to your path
# Ideally this should go into your bash profile
$ export PATH=$HOME/arm-cs-tools/bin:$PATH

# Test the compiler
$ cd ../stellaris/boards/ek-lm4f120xl/project0/
$ make clean; make

# Flash binary to the board
$ lm4flash gcc/project0.bin

# Try making a source modification
$ nano project0.c
$ make &amp;&amp; lm4flash gcc/project0.bin
</code></pre>

<h2>debugging</h2>

<p><a href="https://github.com/utzig/lm4toolsn">lm4tools</a> has a bridge to enable TCP over USB, so code running on the device can be debugged using gdb from the compiled toolchain.</p>

<pre><code># build with debug symbols
$ make clean &amp;&amp; DEBUG=1 make
$ lm4flash gcc/project0.bin

# start tcp/usb bridge in a separate terminal
$ lmicdi

# start gdb and connect to device
$ arm-none-eabi-gdb gcc/project0.axf
Reading symbols from ./gcc/project0.axf...done.
(gdb) target remote :7777
Remote debugging using :7777
0x00000494 in SysCtlDelay ()
(gdb) c
Continuing.
</code></pre>

<p>Note: As well as quitting lm4flash, I also found <code>detach</code> was needed in gdb (even if it hadn't yet been ran) else the board would require a power cycle before flashing was possible again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling the Stellaris toolchain]]></title>
    <link href="http://jmeosbn.github.com/blog/2012/11/15/compiling-the-stellaris-toolchain/"/>
    <updated>2012-11-15T20:02:00+00:00</updated>
    <id>http://jmeosbn.github.com/blog/2012/11/15/compiling-the-stellaris-toolchain</id>
    <content type="html"><![CDATA[<p>If you have Mac OS X and a Stellaris Launchpad, you can mostly follow the instructions at <a href="http://blog.y3xz.com/blog/2012/10/29/an-open-toolchain-for-the-ti-stellaris/">y3xz</a> to build your own toolchain for it - the only issues I ran into are listed below.</p>

<h2>toolchain</h2>

<p>The makefile failed to download the source archive from <a href="http://www.mentor.com/embedded-software/sourcery-tools/sourcery-codebench/editions/lite-edition/arm-eabi">mentor</a>, you can <a href="https://sourcery.mentor.com/GNUToolchain/package10384/public/arm-none-eabi/arm-2012.03-56-arm-none-eabi.src.tar.bz2">download</a> it manually into the root of the toolchain repo and make will continue so long as the checksum matches.</p>

<h2>lm4tools</h2>

<p>The lm4tools binary couldn't read the serial number of the device so the binary wasn't flashed.</p>

<!-- more -->


<pre><code>$ ./lm4flash/lm4flash project0.bin
Unable to get device serial number: LIBUSB_ERROR_OTHER
Unable to find any ICDI devices
</code></pre>

<p>The simplest workaround is to checkout and build commit <a href="https://github.com/utzig/lm4tools/commit/cc49426081">cc49426</a>, which doesn't check for the serial number.  To use newer versions of lm4tools, a <a href="http://utzig.net/files/lm4f120_icdi.tgz">kernel extension</a> needs to be installed.</p>

<p>For more info, see the <a href="https://github.com/utzig/lm4toolsn/issues/8">issue</a> on github.</p>
]]></content>
  </entry>
  
</feed>
